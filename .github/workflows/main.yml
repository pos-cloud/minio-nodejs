name: Deploy Api Storage

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: prod2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Remove existing container if exists
        run: |
          docker rm -f api-storage || true

      - name: Tag previous container (if it exists)
        run: |
          if docker inspect api-storage >/dev/null 2>&1; then
            docker tag api-storage api-storage:previous
          fi

      - name: Build Docker image
        env:
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          docker build --build-arg MINIO_ENDPOINT=${MINIO_ENDPOINT} \
                       --build-arg MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY} \
                       --build-arg MINIO_SECRET_KEY=${MINIO_SECRET_KEY} \
                       -t api-storage -f Dockerfile .

      - name: Run Docker container
        run: |
          docker run -v /home:/home --restart unless-stopped --net host --name api-storage -d -p 310:310 \
          -e MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }} \
          -e MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }} \
          -e MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }} \
          api-storage

      - name: Cleanup previous container if build successful
        if: success()
        run: |
          docker image rm api-storage:previous || true
